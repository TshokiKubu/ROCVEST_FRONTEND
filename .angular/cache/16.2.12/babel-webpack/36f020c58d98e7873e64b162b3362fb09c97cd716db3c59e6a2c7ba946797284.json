{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:44347/api/product';\n  }\n  getProducts() {\n    return this.http.get(`${this.baseUrl}`).pipe(catchError(this.handleError));\n  }\n  getProductTitles() {\n    return this.http.get(`${this.baseUrl}/titles`).pipe(catchError(this.handleError));\n  }\n  getProductTitlesAndPrices() {\n    return this.http.get(`${this.baseUrl}/titles-and-prices`).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    console.error('An error occurred:', error);\n    return throwError('Something went wrong; please try again later.');\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { ProductService };","map":{"version":3,"names":["throwError","catchError","ProductService","constructor","http","baseUrl","getProducts","get","pipe","handleError","getProductTitles","getProductTitlesAndPrices","error","console","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\WorkSpace\\ROCVEST\\FrondEnd\\Baitshoki\\src\\app\\service\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private baseUrl = 'https://localhost:44347/api/product';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(): Observable<any> {\r\n    return this.http.get<any>(`${this.baseUrl}`)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getProductTitles(): Observable<any> {\r\n    return this.http.get<any>(`${this.baseUrl}/titles`)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getProductTitlesAndPrices(): Observable<any> {\r\n    return this.http.get<any>(`${this.baseUrl}/titles-and-prices`)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    console.error('An error occurred:', error);\r\n    return throwError('Something went wrong; please try again later.');\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAE3C,MAGaC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,qCAAqC;EAEf;EAExCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC,CACzCG,IAAI,CACHP,UAAU,CAAC,IAAI,CAACQ,WAAW,CAAC,CAC7B;EACL;EAEAC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,OAAO,SAAS,CAAC,CAChDG,IAAI,CACHP,UAAU,CAAC,IAAI,CAACQ,WAAW,CAAC,CAC7B;EACL;EAEAE,yBAAyBA,CAAA;IACvB,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,OAAO,oBAAoB,CAAC,CAC3DG,IAAI,CACHP,UAAU,CAAC,IAAI,CAACQ,WAAW,CAAC,CAC7B;EACL;EAEQA,WAAWA,CAACG,KAAU;IAC5BC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAOZ,UAAU,CAAC,+CAA+C,CAAC;EACpE;EAAC,QAAAc,CAAA,G;qBA7BUZ,cAAc,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdjB,cAAc;IAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;IAAAC,UAAA,EAFb;EAAM;;SAEPpB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}