{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { ProductService } from '../service/product.service'; // Adjusted import path\nimport * as i0 from \"@angular/core\";\nclass ProductsComponent {\n  constructor(injector) {\n    this.injector = injector;\n    this.products = [];\n    this.selectProd = new EventEmitter();\n    this.heading = 'Products Grid';\n    this.errorMessage = '';\n    // Get instance of ProductService using Injector\n    this.productService = this.injector.get(ProductService);\n  }\n  // Method to fetch products from the API\n  getProducts() {\n    this.productService.getProducts().subscribe(products => {\n      this.products = products;\n    }, error => {\n      this.errorMessage = error; // Assign the error message to display\n    });\n  }\n  // Method to handle selection of a product\n  selectProduct(product) {\n    this.selectProd.emit(product);\n  }\n  static #_ = this.ɵfac = function ProductsComponent_Factory(t) {\n    return new (t || ProductsComponent)(i0.ɵɵdirectiveInject(i0.Injector));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductsComponent,\n    selectors: [[\"app-product-base\"]],\n    inputs: {\n      products: \"products\"\n    },\n    outputs: {\n      selectProd: \"selectProd\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function ProductsComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n}\nexport { ProductsComponent };","map":{"version":3,"names":["EventEmitter","ProductService","ProductsComponent","constructor","injector","products","selectProd","heading","errorMessage","productService","get","getProducts","subscribe","error","selectProduct","product","emit","_","i0","ɵɵdirectiveInject","Injector","_2","selectors","inputs","outputs","decls","vars","template","ProductsComponent_Template","rf","ctx","encapsulation"],"sources":["C:\\WorkSpace\\ROCVEST\\FrondEnd\\Baitshoki\\src\\app\\products\\products.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output, Injector } from '@angular/core';\r\nimport { ProductService } from '../service/product.service'; // Adjusted import path\r\nimport { Product } from './interfaces/product.interface';\r\n\r\n@Component({\r\n  selector: 'app-product-base',\r\n  template: '' \r\n  //templateUrl: './product.component.html'\r\n})\r\nexport class ProductsComponent {\r\n  @Input() products: Product[] = [];\r\n  @Output() selectProd = new EventEmitter();\r\n\r\n  heading = 'Products Grid';\r\n  errorMessage = '';\r\n  productService: ProductService; // Declare productService variable\r\n\r\n  constructor(private injector: Injector) {\r\n    // Get instance of ProductService using Injector\r\n    this.productService = this.injector.get(ProductService);\r\n  }\r\n\r\n  // Method to fetch products from the API\r\n  getProducts(): void {\r\n    this.productService.getProducts()\r\n      .subscribe(\r\n        (products: Product[]) => {\r\n          this.products = products;\r\n        },\r\n        (error: string) => {\r\n          this.errorMessage = error; // Assign the error message to display\r\n        }\r\n      );\r\n  }\r\n\r\n  // Method to handle selection of a product\r\n  selectProduct(product: Product): void {\r\n    this.selectProd.emit(product);\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAAoBA,YAAY,QAAiC,eAAe;AAChF,SAASC,cAAc,QAAQ,4BAA4B,CAAC,CAAC;;AAG7D,MAKaC,iBAAiB;EAQ5BC,YAAoBC,QAAkB;IAAlB,KAAAA,QAAQ,GAARA,QAAQ;IAPnB,KAAAC,QAAQ,GAAc,EAAE;IACvB,KAAAC,UAAU,GAAG,IAAIN,YAAY,EAAE;IAEzC,KAAAO,OAAO,GAAG,eAAe;IACzB,KAAAC,YAAY,GAAG,EAAE;IAIf;IACA,IAAI,CAACC,cAAc,GAAG,IAAI,CAACL,QAAQ,CAACM,GAAG,CAACT,cAAc,CAAC;EACzD;EAEA;EACAU,WAAWA,CAAA;IACT,IAAI,CAACF,cAAc,CAACE,WAAW,EAAE,CAC9BC,SAAS,CACPP,QAAmB,IAAI;MACtB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,EACAQ,KAAa,IAAI;MAChB,IAAI,CAACL,YAAY,GAAGK,KAAK,CAAC,CAAC;IAC7B,CAAC,CACF;EACL;EAEA;EACAC,aAAaA,CAACC,OAAgB;IAC5B,IAAI,CAACT,UAAU,CAACU,IAAI,CAACD,OAAO,CAAC;EAC/B;EAAC,QAAAE,CAAA,G;qBA7BUf,iBAAiB,EAAAgB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,QAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBnB,iBAAiB;IAAAoB,SAAA;IAAAC,MAAA;MAAAlB,QAAA;IAAA;IAAAmB,OAAA;MAAAlB,UAAA;IAAA;IAAAmB,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAAC,aAAA;EAAA;;SAAjB7B,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}